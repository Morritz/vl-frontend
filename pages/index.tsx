import type { NextPage } from "next";
import Head from "next/head";
import { PokemonEntry, PokemonEntryProps } from "../components/PokemonEntry";
import { IPokemonDetails } from "../interfaces/PokemonDetails";

interface HomeProps {
  pokemons: PokemonEntryProps[];
}
const Home: NextPage<HomeProps> = ({ pokemons }) => {
  console.log(pokemons);
  return (
    <>
      <Head>
        <title>PokeApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {pokemons.map((pokemon) => {
        return <PokemonEntry {...pokemon} />;
      })}
    </>
  );
};

interface IPokemonQueryResult {
  name: string;
  url: string;
}

interface IPokemonQuery {
  count: number;
  next: string | null;
  previous: string | null;
  results: IPokemonQueryResult[];
}

const COUNT_OF_POKEMONS_TO_FETCH = 20;
export async function getServerSideProps() {
  // Fetch data from external API
  const res = await fetch(
    `https://pokeapi.co/api/v2/pokemon?limit=${COUNT_OF_POKEMONS_TO_FETCH}&offset=0`
  );
  const data = (await res.json()) as IPokemonQuery;

  const pokemons: PokemonEntryProps[] = await Promise.all(
    data.results.map(async (result) => {
      const res = await fetch(result.url);
      const data = (await res.json()) as IPokemonDetails;
      return {
        name: data.name,
        sprite: data.sprites.front_default,
        type: data.types[0].type.name,
      };
    })
  );
  return { props: { pokemons } };
}

export default Home;
