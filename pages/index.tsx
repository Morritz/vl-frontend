import type { NextPage } from "next";
import Head from "next/head";
import { useCallback, useEffect } from "react";
import { PokemonEntry, PokemonEntryProps } from "../components/PokemonEntry";
import { queryPokemons } from "../queries/pokemonQuery";
import { useStore } from "../store/store";

interface HomeProps {
  pokemons: PokemonEntryProps[];
}
const Home: NextPage<HomeProps> = ({ pokemons }) => {
  const state = useStore(pokemons)();

  const loadMorePokemons = async () => {
    const newPokemons = await queryPokemons(20, state.pokemons.length);
    state.addPokemons(newPokemons);
    console.log(state.pokemons);
  };

  return (
    <>
      <Head>
        <title>PokeApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-gray-50 min-h-screen">
        {state.pokemons.length > 0 ? (
          <>
            <div className="flex flex-row flex-wrap">
              {state.pokemons.map((pokemon) => {
                return <PokemonEntry key={pokemon.name} {...pokemon} />;
              })}
            </div>
            <div className="flex p-4 justify-center">
              <button
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
                onClick={loadMorePokemons}
              >
                Load more...
              </button>
            </div>
          </>
        ) : (
          <p className="text-center text-2xl">
            Unfortunately, we could not provide you with pokemons.
            <br />
            Try again later.
            <br />
            ðŸ˜”
          </p>
        )}
      </div>
    </>
  );
};

export async function getServerSideProps() {
  return { props: { pokemons: await queryPokemons() } };
}

export default Home;
